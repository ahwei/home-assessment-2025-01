name: Pull Request Check

on:
  pull_request:
    paths:
      - '**.ts'
      - '**.tsx'
      - '.github/workflows/**'

jobs:
  typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory path
        id: pnpm-store-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"

      - name: Cache pnpm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-store-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run TypeScript check
        run: pnpm tsc

  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory path
        id: pnpm-store-dir-path
        run: echo "::set-output name=dir::$(pnpm store path)"

      - name: Cache pnpm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-store-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint check
        run: pnpm lint

 